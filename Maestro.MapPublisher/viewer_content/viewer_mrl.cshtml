@using Maestro.MapPublisher.Common
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@Model.Title</title>
    <link rel="stylesheet" href="dist/vendor.css" type="text/css" />
    <link rel="stylesheet" href="dist/viewer.css" type="text/css" />
    <!-- Template specific css -->
    <link rel="stylesheet" href="css/@(((MapGuideReactLayoutViewerOptions)Model.ViewerOptions).TemplateName).css" type="text/css" />
    @if (((MapGuideReactLayoutViewerOptions)Model.ViewerOptions).AddPolyfills)
    {
        <!-- NOTE: If you don't care about IE, you can remove/comment the script reference below -->
        <script type="text/javascript" src="https://polyfill.io/v3/polyfill.min.js?features=Promise%2CPromise.prototype.finally%2CArray.isArray%2CArray.prototype.find%2CArray.prototype.includes%2CObject.assign%2CMath.log2%2Cfetch%2CNumber.isFinite"></script>
    }
    <script type="text/javascript" src="dist/vendor-debug.js" charset="utf-8"></script>
    <script type="text/javascript" src="dist/viewer-debug.js" charset="utf-8"></script>
    @if (Model.HasOverlayLayer(OverlayLayerType.GeoJSON_FromMapGuide))
    {
        <script type="text/javascript" src="assets/geojson-vt.js" charset="utf-8"></script>
    }
    @if (Model.OverlayLayers != null)
    {
        foreach (var extLayer in Model.OverlayLayers)
        {
            if (extLayer.Type == OverlayLayerType.GeoJSON_FromMapGuide)
            {
                @* No need to emit config script as mapguide-react-layout includes geojson-vt and knows when to use it *@
                <script type="text/javascript" src="@(((GeoJSONFromMapGuideOverlayLayer)extLayer).Downloaded.DataScriptRelPath)" charset="utf-8"></script>
            }
        }
    }
    <style type="text/css">
        html, body, #map {
            padding: 0;
            margin: 0;
            font: 10pt Verdana, sans-serif;
        }

        #map {
            position: absolute;
            left: 0;
            right: 0;
            top: 0;
            bottom: 0;
        }
    </style>
</head>
<body>
    <div id="map"></div>
    <script type="text/javascript">
        var el = document.getElementById("map");
        var app = new MapGuide.Application();
        var appDef = @(Model.Meta.AppDefJson);

        app.mount(el, {
            layout: "@(((MapGuideReactLayoutViewerOptions)Model.ViewerOptions).TemplateName)",
            mapguide: {
                agentUri: "@(Model.MapAgent)"
            },
            resourceId: () => Promise.resolve(appDef)
        });

    </script>
</body>
</html>